on:
  workflow_dispatch:
    inputs:
      app:
        description: "app to release"
        default: 'products/hvac-runtime'
        required: true
jobs:
  demo_app_authentication:
    runs-on: ubuntu-latest
    steps:
      - name: JWT Generation
        env:
          app-id: ${{ secrets.GHA_APP_ID }}
          private-key: ${{ secrets.GHA_APP_PRIVATE_KEY }}
        id: jwt
        run: |
          echo "Generating JWT..."
          # Your JWT generation logic here

          set -o pipefail
          client_id='Iv23liVlh15RKVQZ5IGh' # Client ID as first argument

          pem=${{ secrets.GHA_APP_PRIVATE_KEY }} # file path of the private key as second argument

          now=$(date +%s)
          iat=$((${now} - 60)) # Issues 60 seconds in the past
          exp=$((${now} + 600)) # Expires 10 minutes in the future

          b64enc() { openssl base64 | tr -d '=' | tr '/+' '_-' | tr -d '\n'; }

          header_json='{
              "typ":"JWT",
              "alg":"RS256"
          }'
          # Header encode
          header=$( echo -n "${header_json}" | b64enc )

          payload_json="{
              \"iat\":${iat},
              \"exp\":${exp},
              \"iss\":\"${client_id}\"
          }"
          # Payload encode
          payload=$( echo -n "${payload_json}" | b64enc )

          # Signature
          header_payload="${header}"."${payload}"
          signature=$(
              openssl dgst -sha256 -sign <(echo -n "${pem}") \
              <(echo -n "${header_payload}") | b64enc
          )

          # Create JWT
          JWT="${header_payload}"."${signature}"
          printf '%s\n' "JWT: $JWT"

          echo "::set-output name=token::$(cat jwt_token.txt)"

      - name: Setup curl
        uses: kordlib/setup-curl@v1.0.0

      # - name: Generate a token
      #   id: generate-token
      #   uses: actions/create-github-app-token@v2
      #   with:
      #     app-id: ${{ secrets.GHA_APP_ID }}
      #     private-key: ${{ secrets.GHA_APP_PRIVATE_KEY }}


      # - name: Use the token
      #   env:
      #     GH_TOKEN: ${{ steps.jwt.outputs.token }}
      #   run: |
      #     gh api octocat

      - name: "Checkout repository"
        uses: actions/checkout@v4
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
          
      - name: "CI: Create Pull Request"
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          gh pr create --base main --title "Add next DEV version ${{ github.event.inputs.app }}: to main"  \
          --body "The <Create product release> GHA workflow auto-generated the PR"